
stm32f411x_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007d0  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000968  08000970  00010970  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000968  08000968  00010970  2**0
                  CONTENTS
  4 .ARM          00000000  08000968  08000968  00010970  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000968  08000970  00010970  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000968  08000968  00010968  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800096c  0800096c  0001096c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010970  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000970  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000970  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010970  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009ad  00000000  00000000  0001099a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000273  00000000  00000000  00011347  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000115c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00011688  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001451  00000000  00000000  00011728  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e8e  00000000  00000000  00012b79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000055bb  00000000  00000000  00013a07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00018fc2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000268  00000000  00000000  00019018  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000950 	.word	0x08000950

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000950 	.word	0x08000950

080001d8 <delay>:
#include "stm32f411x.h"

#define GPIO_BUTTON_PRESSED HIGH

void delay()
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000/2; i++);
 80001de:	2300      	movs	r3, #0
 80001e0:	607b      	str	r3, [r7, #4]
 80001e2:	e002      	b.n	80001ea <delay+0x12>
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	3301      	adds	r3, #1
 80001e8:	607b      	str	r3, [r7, #4]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a04      	ldr	r2, [pc, #16]	; (8000200 <delay+0x28>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d9f8      	bls.n	80001e4 <delay+0xc>
}
 80001f2:	bf00      	nop
 80001f4:	bf00      	nop
 80001f6:	370c      	adds	r7, #12
 80001f8:	46bd      	mov	sp, r7
 80001fa:	bc80      	pop	{r7}
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	0003d08f 	.word	0x0003d08f

08000204 <main>:



int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLed;
	GPIO_Handle_t GPIOBtn;


	GPIOLed.pGPIOx = GPIOD;
 800020a:	4b1e      	ldr	r3, [pc, #120]	; (8000284 <main+0x80>)
 800020c:	60fb      	str	r3, [r7, #12]
	GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800020e:	230c      	movs	r3, #12
 8000210:	743b      	strb	r3, [r7, #16]
	GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000212:	2301      	movs	r3, #1
 8000214:	747b      	strb	r3, [r7, #17]
	GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000216:	2302      	movs	r3, #2
 8000218:	74bb      	strb	r3, [r7, #18]
	GPIOLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OTYPE_PP;
 800021a:	2300      	movs	r3, #0
 800021c:	753b      	strb	r3, [r7, #20]
	GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021e:	2300      	movs	r3, #0
 8000220:	74fb      	strb	r3, [r7, #19]

	GPIOBtn.pGPIOx = GPIOA;
 8000222:	4b19      	ldr	r3, [pc, #100]	; (8000288 <main+0x84>)
 8000224:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000226:	2300      	movs	r3, #0
 8000228:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 800022a:	2304      	movs	r3, #4
 800022c:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800022e:	2302      	movs	r3, #2
 8000230:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000232:	2300      	movs	r3, #0
 8000234:	71fb      	strb	r3, [r7, #7]


	GPIO_PClk_Ctl(GPIOD, ENABLE);
 8000236:	2101      	movs	r1, #1
 8000238:	4812      	ldr	r0, [pc, #72]	; (8000284 <main+0x80>)
 800023a:	f000 f85f 	bl	80002fc <GPIO_PClk_Ctl>
	GPIO_PClk_Ctl(GPIOA, ENABLE);
 800023e:	2101      	movs	r1, #1
 8000240:	4811      	ldr	r0, [pc, #68]	; (8000288 <main+0x84>)
 8000242:	f000 f85b 	bl	80002fc <GPIO_PClk_Ctl>

	GPIO_Init(&GPIOLed);
 8000246:	f107 030c 	add.w	r3, r7, #12
 800024a:	4618      	mov	r0, r3
 800024c:	f000 f8f6 	bl	800043c <GPIO_Init>

	GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 8000250:	230e      	movs	r3, #14
 8000252:	743b      	strb	r3, [r7, #16]
	GPIO_Init(&GPIOLed);
 8000254:	f107 030c 	add.w	r3, r7, #12
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f8ef 	bl	800043c <GPIO_Init>

	GPIO_Init(&GPIOBtn);
 800025e:	463b      	mov	r3, r7
 8000260:	4618      	mov	r0, r3
 8000262:	f000 f8eb 	bl	800043c <GPIO_Init>

	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRI15);
 8000266:	210f      	movs	r1, #15
 8000268:	2006      	movs	r0, #6
 800026a:	f000 fb01 	bl	8000870 <GPIO_IRQPriorityConfig>
	GPIO_IRQConfig(IRQ_NO_EXTI0, ENABLE);
 800026e:	2101      	movs	r1, #1
 8000270:	2006      	movs	r0, #6
 8000272:	f000 fa79 	bl	8000768 <GPIO_IRQConfig>


	while(1)
	{
		delay();
 8000276:	f7ff ffaf 	bl	80001d8 <delay>
		GPIO_TogglePin(GPIOD, GPIO_PIN_NO_14);
 800027a:	210e      	movs	r1, #14
 800027c:	4801      	ldr	r0, [pc, #4]	; (8000284 <main+0x80>)
 800027e:	f000 fa5f 	bl	8000740 <GPIO_TogglePin>
		delay();
 8000282:	e7f8      	b.n	8000276 <main+0x72>
 8000284:	40020c00 	.word	0x40020c00
 8000288:	40020000 	.word	0x40020000

0800028c <EXTI0_IRQHandler>:
	return 0;
}


void EXTI0_IRQHandler(void)
{
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_0);
 8000290:	2000      	movs	r0, #0
 8000292:	f000 fb19 	bl	80008c8 <GPIO_IRQHandling>
	GPIO_TogglePin(GPIOD, GPIO_PIN_NO_12);
 8000296:	210c      	movs	r1, #12
 8000298:	4802      	ldr	r0, [pc, #8]	; (80002a4 <EXTI0_IRQHandler+0x18>)
 800029a:	f000 fa51 	bl	8000740 <GPIO_TogglePin>
}
 800029e:	bf00      	nop
 80002a0:	bd80      	pop	{r7, pc}
 80002a2:	bf00      	nop
 80002a4:	40020c00 	.word	0x40020c00

080002a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a8:	480d      	ldr	r0, [pc, #52]	; (80002e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002aa:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b0:	480c      	ldr	r0, [pc, #48]	; (80002e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b2:	490d      	ldr	r1, [pc, #52]	; (80002e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b4:	4a0d      	ldr	r2, [pc, #52]	; (80002ec <LoopForever+0xe>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b8:	e002      	b.n	80002c0 <LoopCopyDataInit>

080002ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002be:	3304      	adds	r3, #4

080002c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c4:	d3f9      	bcc.n	80002ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c6:	4a0a      	ldr	r2, [pc, #40]	; (80002f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c8:	4c0a      	ldr	r4, [pc, #40]	; (80002f4 <LoopForever+0x16>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002cc:	e001      	b.n	80002d2 <LoopFillZerobss>

080002ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d0:	3204      	adds	r2, #4

080002d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d4:	d3fb      	bcc.n	80002ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002d6:	f000 fb17 	bl	8000908 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002da:	f7ff ff93 	bl	8000204 <main>

080002de <LoopForever>:

LoopForever:
    b LoopForever
 80002de:	e7fe      	b.n	80002de <LoopForever>
  ldr   r0, =_estack
 80002e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ec:	08000970 	.word	0x08000970
  ldr r2, =_sbss
 80002f0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f4:	2000001c 	.word	0x2000001c

080002f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f8:	e7fe      	b.n	80002f8 <ADC_IRQHandler>
	...

080002fc <GPIO_PClk_Ctl>:
 * @Note		- none
 *
 */

void GPIO_PClk_Ctl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	6078      	str	r0, [r7, #4]
 8000304:	460b      	mov	r3, r1
 8000306:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000308:	78fb      	ldrb	r3, [r7, #3]
 800030a:	2b01      	cmp	r3, #1
 800030c:	d141      	bne.n	8000392 <GPIO_PClk_Ctl+0x96>
	{
		if(pGPIOx == GPIOA)
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a43      	ldr	r2, [pc, #268]	; (8000420 <GPIO_PClk_Ctl+0x124>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PClk_Ctl+0x28>
		{
			GPIOA_PCLK_EN();
 8000316:	4b43      	ldr	r3, [pc, #268]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a42      	ldr	r2, [pc, #264]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 800031c:	f043 0301 	orr.w	r3, r3, #1
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOH_PCLK_DI();
		}
	}

}
 8000322:	e077      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOB)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a40      	ldr	r2, [pc, #256]	; (8000428 <GPIO_PClk_Ctl+0x12c>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PClk_Ctl+0x3e>
			GPIOB_PCLK_EN();
 800032c:	4b3d      	ldr	r3, [pc, #244]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a3c      	ldr	r2, [pc, #240]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 8000332:	f043 0302 	orr.w	r3, r3, #2
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e06c      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOC)
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a3b      	ldr	r2, [pc, #236]	; (800042c <GPIO_PClk_Ctl+0x130>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PClk_Ctl+0x54>
			GPIOC_PCLK_EN();
 8000342:	4b38      	ldr	r3, [pc, #224]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a37      	ldr	r2, [pc, #220]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 8000348:	f043 0304 	orr.w	r3, r3, #4
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034e:	e061      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOD)
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a37      	ldr	r2, [pc, #220]	; (8000430 <GPIO_PClk_Ctl+0x134>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_PClk_Ctl+0x6a>
			GPIOD_PCLK_EN();
 8000358:	4b32      	ldr	r3, [pc, #200]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035c:	4a31      	ldr	r2, [pc, #196]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 800035e:	f043 0308 	orr.w	r3, r3, #8
 8000362:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000364:	e056      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOE)
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a32      	ldr	r2, [pc, #200]	; (8000434 <GPIO_PClk_Ctl+0x138>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_PClk_Ctl+0x80>
			GPIOE_PCLK_EN();
 800036e:	4b2d      	ldr	r3, [pc, #180]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000372:	4a2c      	ldr	r2, [pc, #176]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 8000374:	f043 0310 	orr.w	r3, r3, #16
 8000378:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037a:	e04b      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOH)
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a2e      	ldr	r2, [pc, #184]	; (8000438 <GPIO_PClk_Ctl+0x13c>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d147      	bne.n	8000414 <GPIO_PClk_Ctl+0x118>
			GPIOH_PCLK_EN();
 8000384:	4b27      	ldr	r3, [pc, #156]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000388:	4a26      	ldr	r2, [pc, #152]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 800038a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800038e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000390:	e040      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		if(pGPIOx == GPIOA)
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4a22      	ldr	r2, [pc, #136]	; (8000420 <GPIO_PClk_Ctl+0x124>)
 8000396:	4293      	cmp	r3, r2
 8000398:	d106      	bne.n	80003a8 <GPIO_PClk_Ctl+0xac>
			GPIOA_PCLK_DI();
 800039a:	4b22      	ldr	r3, [pc, #136]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 800039c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039e:	4a21      	ldr	r2, [pc, #132]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003a0:	f043 0301 	orr.w	r3, r3, #1
 80003a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a6:	e035      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOB)
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a1f      	ldr	r2, [pc, #124]	; (8000428 <GPIO_PClk_Ctl+0x12c>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d106      	bne.n	80003be <GPIO_PClk_Ctl+0xc2>
			GPIOB_PCLK_DI();
 80003b0:	4b1c      	ldr	r3, [pc, #112]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b4:	4a1b      	ldr	r2, [pc, #108]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003b6:	f043 0302 	orr.w	r3, r3, #2
 80003ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003bc:	e02a      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOC)
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4a1a      	ldr	r2, [pc, #104]	; (800042c <GPIO_PClk_Ctl+0x130>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	d106      	bne.n	80003d4 <GPIO_PClk_Ctl+0xd8>
			GPIOC_PCLK_DI();
 80003c6:	4b17      	ldr	r3, [pc, #92]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ca:	4a16      	ldr	r2, [pc, #88]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003cc:	f043 0304 	orr.w	r3, r3, #4
 80003d0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d2:	e01f      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOD)
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	4a16      	ldr	r2, [pc, #88]	; (8000430 <GPIO_PClk_Ctl+0x134>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d106      	bne.n	80003ea <GPIO_PClk_Ctl+0xee>
			GPIOD_PCLK_DI();
 80003dc:	4b11      	ldr	r3, [pc, #68]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e0:	4a10      	ldr	r2, [pc, #64]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003e2:	f043 0308 	orr.w	r3, r3, #8
 80003e6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e8:	e014      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOE)
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4a11      	ldr	r2, [pc, #68]	; (8000434 <GPIO_PClk_Ctl+0x138>)
 80003ee:	4293      	cmp	r3, r2
 80003f0:	d106      	bne.n	8000400 <GPIO_PClk_Ctl+0x104>
			GPIOE_PCLK_DI();
 80003f2:	4b0c      	ldr	r3, [pc, #48]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f6:	4a0b      	ldr	r2, [pc, #44]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 80003f8:	f043 0310 	orr.w	r3, r3, #16
 80003fc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fe:	e009      	b.n	8000414 <GPIO_PClk_Ctl+0x118>
		else if(pGPIOx == GPIOH)
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	4a0d      	ldr	r2, [pc, #52]	; (8000438 <GPIO_PClk_Ctl+0x13c>)
 8000404:	4293      	cmp	r3, r2
 8000406:	d105      	bne.n	8000414 <GPIO_PClk_Ctl+0x118>
			GPIOH_PCLK_DI();
 8000408:	4b06      	ldr	r3, [pc, #24]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 800040a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040c:	4a05      	ldr	r2, [pc, #20]	; (8000424 <GPIO_PClk_Ctl+0x128>)
 800040e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000412:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000414:	bf00      	nop
 8000416:	370c      	adds	r7, #12
 8000418:	46bd      	mov	sp, r7
 800041a:	bc80      	pop	{r7}
 800041c:	4770      	bx	lr
 800041e:	bf00      	nop
 8000420:	40020000 	.word	0x40020000
 8000424:	40023800 	.word	0x40023800
 8000428:	40020400 	.word	0x40020400
 800042c:	40020800 	.word	0x40020800
 8000430:	40020c00 	.word	0x40020c00
 8000434:	40021000 	.word	0x40021000
 8000438:	40021c00 	.word	0x40021c00

0800043c <GPIO_Init>:
 *
 * @Note		- none
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800043c:	b480      	push	{r7}
 800043e:	b087      	sub	sp, #28
 8000440:	af00      	add	r7, sp, #0
 8000442:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000444:	2300      	movs	r3, #0
 8000446:	617b      	str	r3, [r7, #20]

	//1. Configure the GPIO Mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	795b      	ldrb	r3, [r3, #5]
 800044c:	2b03      	cmp	r3, #3
 800044e:	d81f      	bhi.n	8000490 <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	795b      	ldrb	r3, [r3, #5]
 8000454:	461a      	mov	r2, r3
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	791b      	ldrb	r3, [r3, #4]
 800045a:	005b      	lsls	r3, r3, #1
 800045c:	fa02 f303 	lsl.w	r3, r2, r3
 8000460:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	681a      	ldr	r2, [r3, #0]
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	791b      	ldrb	r3, [r3, #4]
 800046c:	4619      	mov	r1, r3
 800046e:	2303      	movs	r3, #3
 8000470:	408b      	lsls	r3, r1
 8000472:	43db      	mvns	r3, r3
 8000474:	4619      	mov	r1, r3
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	400a      	ands	r2, r1
 800047c:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;	//setting
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	6819      	ldr	r1, [r3, #0]
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	697a      	ldr	r2, [r7, #20]
 800048a:	430a      	orrs	r2, r1
 800048c:	601a      	str	r2, [r3, #0]
 800048e:	e0a1      	b.n	80005d4 <GPIO_Init+0x198>
	}
	else
	{
		// this configuration is for interrupt modes
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	795b      	ldrb	r3, [r3, #5]
 8000494:	2b04      	cmp	r3, #4
 8000496:	d117      	bne.n	80004c8 <GPIO_Init+0x8c>
		{
				// Enable FTSR register
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000498:	4ba0      	ldr	r3, [pc, #640]	; (800071c <GPIO_Init+0x2e0>)
 800049a:	68db      	ldr	r3, [r3, #12]
 800049c:	687a      	ldr	r2, [r7, #4]
 800049e:	7912      	ldrb	r2, [r2, #4]
 80004a0:	4611      	mov	r1, r2
 80004a2:	2201      	movs	r2, #1
 80004a4:	408a      	lsls	r2, r1
 80004a6:	4611      	mov	r1, r2
 80004a8:	4a9c      	ldr	r2, [pc, #624]	; (800071c <GPIO_Init+0x2e0>)
 80004aa:	430b      	orrs	r3, r1
 80004ac:	60d3      	str	r3, [r2, #12]

			// clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ae:	4b9b      	ldr	r3, [pc, #620]	; (800071c <GPIO_Init+0x2e0>)
 80004b0:	689b      	ldr	r3, [r3, #8]
 80004b2:	687a      	ldr	r2, [r7, #4]
 80004b4:	7912      	ldrb	r2, [r2, #4]
 80004b6:	4611      	mov	r1, r2
 80004b8:	2201      	movs	r2, #1
 80004ba:	408a      	lsls	r2, r1
 80004bc:	43d2      	mvns	r2, r2
 80004be:	4611      	mov	r1, r2
 80004c0:	4a96      	ldr	r2, [pc, #600]	; (800071c <GPIO_Init+0x2e0>)
 80004c2:	400b      	ands	r3, r1
 80004c4:	6093      	str	r3, [r2, #8]
 80004c6:	e035      	b.n	8000534 <GPIO_Init+0xf8>


		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	795b      	ldrb	r3, [r3, #5]
 80004cc:	2b05      	cmp	r3, #5
 80004ce:	d117      	bne.n	8000500 <GPIO_Init+0xc4>
		{
				// Enable RTSR register
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d0:	4b92      	ldr	r3, [pc, #584]	; (800071c <GPIO_Init+0x2e0>)
 80004d2:	689b      	ldr	r3, [r3, #8]
 80004d4:	687a      	ldr	r2, [r7, #4]
 80004d6:	7912      	ldrb	r2, [r2, #4]
 80004d8:	4611      	mov	r1, r2
 80004da:	2201      	movs	r2, #1
 80004dc:	408a      	lsls	r2, r1
 80004de:	4611      	mov	r1, r2
 80004e0:	4a8e      	ldr	r2, [pc, #568]	; (800071c <GPIO_Init+0x2e0>)
 80004e2:	430b      	orrs	r3, r1
 80004e4:	6093      	str	r3, [r2, #8]

				// clear the corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e6:	4b8d      	ldr	r3, [pc, #564]	; (800071c <GPIO_Init+0x2e0>)
 80004e8:	68db      	ldr	r3, [r3, #12]
 80004ea:	687a      	ldr	r2, [r7, #4]
 80004ec:	7912      	ldrb	r2, [r2, #4]
 80004ee:	4611      	mov	r1, r2
 80004f0:	2201      	movs	r2, #1
 80004f2:	408a      	lsls	r2, r1
 80004f4:	43d2      	mvns	r2, r2
 80004f6:	4611      	mov	r1, r2
 80004f8:	4a88      	ldr	r2, [pc, #544]	; (800071c <GPIO_Init+0x2e0>)
 80004fa:	400b      	ands	r3, r1
 80004fc:	60d3      	str	r3, [r2, #12]
 80004fe:	e019      	b.n	8000534 <GPIO_Init+0xf8>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	795b      	ldrb	r3, [r3, #5]
 8000504:	2b06      	cmp	r3, #6
 8000506:	d115      	bne.n	8000534 <GPIO_Init+0xf8>
		{
				// Enable FTSR and RTSR register
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000508:	4b84      	ldr	r3, [pc, #528]	; (800071c <GPIO_Init+0x2e0>)
 800050a:	68db      	ldr	r3, [r3, #12]
 800050c:	687a      	ldr	r2, [r7, #4]
 800050e:	7912      	ldrb	r2, [r2, #4]
 8000510:	4611      	mov	r1, r2
 8000512:	2201      	movs	r2, #1
 8000514:	408a      	lsls	r2, r1
 8000516:	4611      	mov	r1, r2
 8000518:	4a80      	ldr	r2, [pc, #512]	; (800071c <GPIO_Init+0x2e0>)
 800051a:	430b      	orrs	r3, r1
 800051c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800051e:	4b7f      	ldr	r3, [pc, #508]	; (800071c <GPIO_Init+0x2e0>)
 8000520:	689b      	ldr	r3, [r3, #8]
 8000522:	687a      	ldr	r2, [r7, #4]
 8000524:	7912      	ldrb	r2, [r2, #4]
 8000526:	4611      	mov	r1, r2
 8000528:	2201      	movs	r2, #1
 800052a:	408a      	lsls	r2, r1
 800052c:	4611      	mov	r1, r2
 800052e:	4a7b      	ldr	r2, [pc, #492]	; (800071c <GPIO_Init+0x2e0>)
 8000530:	430b      	orrs	r3, r1
 8000532:	6093      	str	r3, [r2, #8]

		}

		// Configure SYSCFG_EXTICR register
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	791b      	ldrb	r3, [r3, #4]
 8000538:	089b      	lsrs	r3, r3, #2
 800053a:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	791b      	ldrb	r3, [r3, #4]
 8000540:	f003 0303 	and.w	r3, r3, #3
 8000544:	74bb      	strb	r3, [r7, #18]

		uint8_t portCode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	4a75      	ldr	r2, [pc, #468]	; (8000720 <GPIO_Init+0x2e4>)
 800054c:	4293      	cmp	r3, r2
 800054e:	d024      	beq.n	800059a <GPIO_Init+0x15e>
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	4a73      	ldr	r2, [pc, #460]	; (8000724 <GPIO_Init+0x2e8>)
 8000556:	4293      	cmp	r3, r2
 8000558:	d01d      	beq.n	8000596 <GPIO_Init+0x15a>
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	4a72      	ldr	r2, [pc, #456]	; (8000728 <GPIO_Init+0x2ec>)
 8000560:	4293      	cmp	r3, r2
 8000562:	d016      	beq.n	8000592 <GPIO_Init+0x156>
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	4a70      	ldr	r2, [pc, #448]	; (800072c <GPIO_Init+0x2f0>)
 800056a:	4293      	cmp	r3, r2
 800056c:	d00f      	beq.n	800058e <GPIO_Init+0x152>
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	4a6f      	ldr	r2, [pc, #444]	; (8000730 <GPIO_Init+0x2f4>)
 8000574:	4293      	cmp	r3, r2
 8000576:	d008      	beq.n	800058a <GPIO_Init+0x14e>
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	4a6d      	ldr	r2, [pc, #436]	; (8000734 <GPIO_Init+0x2f8>)
 800057e:	4293      	cmp	r3, r2
 8000580:	d101      	bne.n	8000586 <GPIO_Init+0x14a>
 8000582:	2307      	movs	r3, #7
 8000584:	e00a      	b.n	800059c <GPIO_Init+0x160>
 8000586:	2300      	movs	r3, #0
 8000588:	e008      	b.n	800059c <GPIO_Init+0x160>
 800058a:	2304      	movs	r3, #4
 800058c:	e006      	b.n	800059c <GPIO_Init+0x160>
 800058e:	2303      	movs	r3, #3
 8000590:	e004      	b.n	800059c <GPIO_Init+0x160>
 8000592:	2302      	movs	r3, #2
 8000594:	e002      	b.n	800059c <GPIO_Init+0x160>
 8000596:	2301      	movs	r3, #1
 8000598:	e000      	b.n	800059c <GPIO_Init+0x160>
 800059a:	2300      	movs	r3, #0
 800059c:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800059e:	4b66      	ldr	r3, [pc, #408]	; (8000738 <GPIO_Init+0x2fc>)
 80005a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005a2:	4a65      	ldr	r2, [pc, #404]	; (8000738 <GPIO_Init+0x2fc>)
 80005a4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005a8:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portCode << (4 * temp2);
 80005aa:	7c7a      	ldrb	r2, [r7, #17]
 80005ac:	7cbb      	ldrb	r3, [r7, #18]
 80005ae:	009b      	lsls	r3, r3, #2
 80005b0:	fa02 f103 	lsl.w	r1, r2, r3
 80005b4:	4a61      	ldr	r2, [pc, #388]	; (800073c <GPIO_Init+0x300>)
 80005b6:	7cfb      	ldrb	r3, [r7, #19]
 80005b8:	3302      	adds	r3, #2
 80005ba:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// Configure IMR Register
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005be:	4b57      	ldr	r3, [pc, #348]	; (800071c <GPIO_Init+0x2e0>)
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	687a      	ldr	r2, [r7, #4]
 80005c4:	7912      	ldrb	r2, [r2, #4]
 80005c6:	4611      	mov	r1, r2
 80005c8:	2201      	movs	r2, #1
 80005ca:	408a      	lsls	r2, r1
 80005cc:	4611      	mov	r1, r2
 80005ce:	4a53      	ldr	r2, [pc, #332]	; (800071c <GPIO_Init+0x2e0>)
 80005d0:	430b      	orrs	r3, r1
 80005d2:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 80005d4:	2300      	movs	r3, #0
 80005d6:	617b      	str	r3, [r7, #20]

	//2. Configure the GPIO Speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	799b      	ldrb	r3, [r3, #6]
 80005dc:	461a      	mov	r2, r3
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	791b      	ldrb	r3, [r3, #4]
 80005e2:	005b      	lsls	r3, r3, #1
 80005e4:	fa02 f303 	lsl.w	r3, r2, r3
 80005e8:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);  //clearing
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	689a      	ldr	r2, [r3, #8]
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	791b      	ldrb	r3, [r3, #4]
 80005f4:	4619      	mov	r1, r3
 80005f6:	2303      	movs	r3, #3
 80005f8:	408b      	lsls	r3, r1
 80005fa:	43db      	mvns	r3, r3
 80005fc:	4619      	mov	r1, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	400a      	ands	r2, r1
 8000604:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	6899      	ldr	r1, [r3, #8]
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	697a      	ldr	r2, [r7, #20]
 8000612:	430a      	orrs	r2, r1
 8000614:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000616:	2300      	movs	r3, #0
 8000618:	617b      	str	r3, [r7, #20]

	//3. Configure the Pull Up/Down Settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	79db      	ldrb	r3, [r3, #7]
 800061e:	461a      	mov	r2, r3
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	791b      	ldrb	r3, [r3, #4]
 8000624:	005b      	lsls	r3, r3, #1
 8000626:	fa02 f303 	lsl.w	r3, r2, r3
 800062a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);  //clearing
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	68da      	ldr	r2, [r3, #12]
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	791b      	ldrb	r3, [r3, #4]
 8000636:	4619      	mov	r1, r3
 8000638:	2303      	movs	r3, #3
 800063a:	408b      	lsls	r3, r1
 800063c:	43db      	mvns	r3, r3
 800063e:	4619      	mov	r1, r3
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	400a      	ands	r2, r1
 8000646:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	68d9      	ldr	r1, [r3, #12]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	681b      	ldr	r3, [r3, #0]
 8000652:	697a      	ldr	r2, [r7, #20]
 8000654:	430a      	orrs	r2, r1
 8000656:	60da      	str	r2, [r3, #12]


	temp = 0;
 8000658:	2300      	movs	r3, #0
 800065a:	617b      	str	r3, [r7, #20]

	//4. Configure the Output Type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	7a1b      	ldrb	r3, [r3, #8]
 8000660:	461a      	mov	r2, r3
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	791b      	ldrb	r3, [r3, #4]
 8000666:	fa02 f303 	lsl.w	r3, r2, r3
 800066a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);  //clearing
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	685a      	ldr	r2, [r3, #4]
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	791b      	ldrb	r3, [r3, #4]
 8000676:	4619      	mov	r1, r3
 8000678:	2301      	movs	r3, #1
 800067a:	408b      	lsls	r3, r1
 800067c:	43db      	mvns	r3, r3
 800067e:	4619      	mov	r1, r3
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	400a      	ands	r2, r1
 8000686:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	6859      	ldr	r1, [r3, #4]
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	697a      	ldr	r2, [r7, #20]
 8000694:	430a      	orrs	r2, r1
 8000696:	605a      	str	r2, [r3, #4]



	temp = 0;
 8000698:	2300      	movs	r3, #0
 800069a:	617b      	str	r3, [r7, #20]

	//5. Configure the alternate function mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	795b      	ldrb	r3, [r3, #5]
 80006a0:	2b02      	cmp	r3, #2
 80006a2:	d136      	bne.n	8000712 <GPIO_Init+0x2d6>
	{
		uint8_t temp1 = 0;
 80006a4:	2300      	movs	r3, #0
 80006a6:	743b      	strb	r3, [r7, #16]
		uint8_t temp2 = 0;
 80006a8:	2300      	movs	r3, #0
 80006aa:	73fb      	strb	r3, [r7, #15]

		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8);
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	791b      	ldrb	r3, [r3, #4]
 80006b0:	08db      	lsrs	r3, r3, #3
 80006b2:	743b      	strb	r3, [r7, #16]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8);
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	791b      	ldrb	r3, [r3, #4]
 80006b8:	f003 0307 	and.w	r3, r3, #7
 80006bc:	73fb      	strb	r3, [r7, #15]

		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	7a5b      	ldrb	r3, [r3, #9]
 80006c2:	461a      	mov	r2, r3
 80006c4:	7bfb      	ldrb	r3, [r7, #15]
 80006c6:	009b      	lsls	r3, r3, #2
 80006c8:	fa02 f303 	lsl.w	r3, r2, r3
 80006cc:	617b      	str	r3, [r7, #20]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF <<  (4 * temp2));  //clearing
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	7c3a      	ldrb	r2, [r7, #16]
 80006d4:	3208      	adds	r2, #8
 80006d6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006da:	7bfb      	ldrb	r3, [r7, #15]
 80006dc:	009b      	lsls	r3, r3, #2
 80006de:	220f      	movs	r2, #15
 80006e0:	fa02 f303 	lsl.w	r3, r2, r3
 80006e4:	43db      	mvns	r3, r3
 80006e6:	4618      	mov	r0, r3
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	7c3a      	ldrb	r2, [r7, #16]
 80006ee:	4001      	ands	r1, r0
 80006f0:	3208      	adds	r2, #8
 80006f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= temp;
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	7c3a      	ldrb	r2, [r7, #16]
 80006fc:	3208      	adds	r2, #8
 80006fe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	7c3a      	ldrb	r2, [r7, #16]
 8000708:	6979      	ldr	r1, [r7, #20]
 800070a:	4301      	orrs	r1, r0
 800070c:	3208      	adds	r2, #8
 800070e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}
}
 8000712:	bf00      	nop
 8000714:	371c      	adds	r7, #28
 8000716:	46bd      	mov	sp, r7
 8000718:	bc80      	pop	{r7}
 800071a:	4770      	bx	lr
 800071c:	40013c00 	.word	0x40013c00
 8000720:	40020000 	.word	0x40020000
 8000724:	40020400 	.word	0x40020400
 8000728:	40020800 	.word	0x40020800
 800072c:	40020c00 	.word	0x40020c00
 8000730:	40021000 	.word	0x40021000
 8000734:	40021c00 	.word	0x40021c00
 8000738:	40023800 	.word	0x40023800
 800073c:	40013800 	.word	0x40013800

08000740 <GPIO_TogglePin>:
 * @Note		- none
 *
 */

void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000740:	b480      	push	{r7}
 8000742:	b083      	sub	sp, #12
 8000744:	af00      	add	r7, sp, #0
 8000746:	6078      	str	r0, [r7, #4]
 8000748:	460b      	mov	r3, r1
 800074a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR	^= (1 << PinNumber);
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	695b      	ldr	r3, [r3, #20]
 8000750:	78fa      	ldrb	r2, [r7, #3]
 8000752:	2101      	movs	r1, #1
 8000754:	fa01 f202 	lsl.w	r2, r1, r2
 8000758:	405a      	eors	r2, r3
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	615a      	str	r2, [r3, #20]
}
 800075e:	bf00      	nop
 8000760:	370c      	adds	r7, #12
 8000762:	46bd      	mov	sp, r7
 8000764:	bc80      	pop	{r7}
 8000766:	4770      	bx	lr

08000768 <GPIO_IRQConfig>:
 * @Note		- none
 *
 */

void GPIO_IRQConfig(uint8_t IRQNumber,  uint8_t EnorDi)
{
 8000768:	b480      	push	{r7}
 800076a:	b083      	sub	sp, #12
 800076c:	af00      	add	r7, sp, #0
 800076e:	4603      	mov	r3, r0
 8000770:	460a      	mov	r2, r1
 8000772:	71fb      	strb	r3, [r7, #7]
 8000774:	4613      	mov	r3, r2
 8000776:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000778:	79bb      	ldrb	r3, [r7, #6]
 800077a:	2b01      	cmp	r3, #1
 800077c:	d133      	bne.n	80007e6 <GPIO_IRQConfig+0x7e>
	{
		if(IRQNumber < 32)
 800077e:	79fb      	ldrb	r3, [r7, #7]
 8000780:	2b1f      	cmp	r3, #31
 8000782:	d80a      	bhi.n	800079a <GPIO_IRQConfig+0x32>
		{
			NVIC_ISER0 |= (1 << IRQNumber);
 8000784:	4b34      	ldr	r3, [pc, #208]	; (8000858 <GPIO_IRQConfig+0xf0>)
 8000786:	681b      	ldr	r3, [r3, #0]
 8000788:	79fa      	ldrb	r2, [r7, #7]
 800078a:	2101      	movs	r1, #1
 800078c:	fa01 f202 	lsl.w	r2, r1, r2
 8000790:	4611      	mov	r1, r2
 8000792:	4a31      	ldr	r2, [pc, #196]	; (8000858 <GPIO_IRQConfig+0xf0>)
 8000794:	430b      	orrs	r3, r1
 8000796:	6013      	str	r3, [r2, #0]
		{
			NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}

}
 8000798:	e059      	b.n	800084e <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >=32 && IRQNumber < 64)
 800079a:	79fb      	ldrb	r3, [r7, #7]
 800079c:	2b1f      	cmp	r3, #31
 800079e:	d90f      	bls.n	80007c0 <GPIO_IRQConfig+0x58>
 80007a0:	79fb      	ldrb	r3, [r7, #7]
 80007a2:	2b3f      	cmp	r3, #63	; 0x3f
 80007a4:	d80c      	bhi.n	80007c0 <GPIO_IRQConfig+0x58>
			NVIC_ISER1 |= (1 << (IRQNumber % 32));
 80007a6:	4b2d      	ldr	r3, [pc, #180]	; (800085c <GPIO_IRQConfig+0xf4>)
 80007a8:	681b      	ldr	r3, [r3, #0]
 80007aa:	79fa      	ldrb	r2, [r7, #7]
 80007ac:	f002 021f 	and.w	r2, r2, #31
 80007b0:	2101      	movs	r1, #1
 80007b2:	fa01 f202 	lsl.w	r2, r1, r2
 80007b6:	4611      	mov	r1, r2
 80007b8:	4a28      	ldr	r2, [pc, #160]	; (800085c <GPIO_IRQConfig+0xf4>)
 80007ba:	430b      	orrs	r3, r1
 80007bc:	6013      	str	r3, [r2, #0]
 80007be:	e046      	b.n	800084e <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >=64 && IRQNumber < 96)
 80007c0:	79fb      	ldrb	r3, [r7, #7]
 80007c2:	2b3f      	cmp	r3, #63	; 0x3f
 80007c4:	d943      	bls.n	800084e <GPIO_IRQConfig+0xe6>
 80007c6:	79fb      	ldrb	r3, [r7, #7]
 80007c8:	2b5f      	cmp	r3, #95	; 0x5f
 80007ca:	d840      	bhi.n	800084e <GPIO_IRQConfig+0xe6>
			NVIC_ISER2 |= (1 << (IRQNumber % 64));
 80007cc:	4b24      	ldr	r3, [pc, #144]	; (8000860 <GPIO_IRQConfig+0xf8>)
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	79fa      	ldrb	r2, [r7, #7]
 80007d2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007d6:	2101      	movs	r1, #1
 80007d8:	fa01 f202 	lsl.w	r2, r1, r2
 80007dc:	4611      	mov	r1, r2
 80007de:	4a20      	ldr	r2, [pc, #128]	; (8000860 <GPIO_IRQConfig+0xf8>)
 80007e0:	430b      	orrs	r3, r1
 80007e2:	6013      	str	r3, [r2, #0]
}
 80007e4:	e033      	b.n	800084e <GPIO_IRQConfig+0xe6>
		if(IRQNumber < 32)
 80007e6:	79fb      	ldrb	r3, [r7, #7]
 80007e8:	2b1f      	cmp	r3, #31
 80007ea:	d80a      	bhi.n	8000802 <GPIO_IRQConfig+0x9a>
			NVIC_ICER0 |= (1 << IRQNumber);
 80007ec:	4b1d      	ldr	r3, [pc, #116]	; (8000864 <GPIO_IRQConfig+0xfc>)
 80007ee:	681b      	ldr	r3, [r3, #0]
 80007f0:	79fa      	ldrb	r2, [r7, #7]
 80007f2:	2101      	movs	r1, #1
 80007f4:	fa01 f202 	lsl.w	r2, r1, r2
 80007f8:	4611      	mov	r1, r2
 80007fa:	4a1a      	ldr	r2, [pc, #104]	; (8000864 <GPIO_IRQConfig+0xfc>)
 80007fc:	430b      	orrs	r3, r1
 80007fe:	6013      	str	r3, [r2, #0]
}
 8000800:	e025      	b.n	800084e <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >=32 && IRQNumber < 64)
 8000802:	79fb      	ldrb	r3, [r7, #7]
 8000804:	2b1f      	cmp	r3, #31
 8000806:	d90f      	bls.n	8000828 <GPIO_IRQConfig+0xc0>
 8000808:	79fb      	ldrb	r3, [r7, #7]
 800080a:	2b3f      	cmp	r3, #63	; 0x3f
 800080c:	d80c      	bhi.n	8000828 <GPIO_IRQConfig+0xc0>
			NVIC_ICER1 |= (1 << (IRQNumber % 32));
 800080e:	4b16      	ldr	r3, [pc, #88]	; (8000868 <GPIO_IRQConfig+0x100>)
 8000810:	681b      	ldr	r3, [r3, #0]
 8000812:	79fa      	ldrb	r2, [r7, #7]
 8000814:	f002 021f 	and.w	r2, r2, #31
 8000818:	2101      	movs	r1, #1
 800081a:	fa01 f202 	lsl.w	r2, r1, r2
 800081e:	4611      	mov	r1, r2
 8000820:	4a11      	ldr	r2, [pc, #68]	; (8000868 <GPIO_IRQConfig+0x100>)
 8000822:	430b      	orrs	r3, r1
 8000824:	6013      	str	r3, [r2, #0]
 8000826:	e012      	b.n	800084e <GPIO_IRQConfig+0xe6>
		else if(IRQNumber >=64 && IRQNumber < 96)
 8000828:	79fb      	ldrb	r3, [r7, #7]
 800082a:	2b3f      	cmp	r3, #63	; 0x3f
 800082c:	d90f      	bls.n	800084e <GPIO_IRQConfig+0xe6>
 800082e:	79fb      	ldrb	r3, [r7, #7]
 8000830:	2b5f      	cmp	r3, #95	; 0x5f
 8000832:	d80c      	bhi.n	800084e <GPIO_IRQConfig+0xe6>
			NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000834:	4b0d      	ldr	r3, [pc, #52]	; (800086c <GPIO_IRQConfig+0x104>)
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	79fa      	ldrb	r2, [r7, #7]
 800083a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800083e:	2101      	movs	r1, #1
 8000840:	fa01 f202 	lsl.w	r2, r1, r2
 8000844:	4611      	mov	r1, r2
 8000846:	4a09      	ldr	r2, [pc, #36]	; (800086c <GPIO_IRQConfig+0x104>)
 8000848:	430b      	orrs	r3, r1
 800084a:	6013      	str	r3, [r2, #0]
}
 800084c:	e7ff      	b.n	800084e <GPIO_IRQConfig+0xe6>
 800084e:	bf00      	nop
 8000850:	370c      	adds	r7, #12
 8000852:	46bd      	mov	sp, r7
 8000854:	bc80      	pop	{r7}
 8000856:	4770      	bx	lr
 8000858:	e000e100 	.word	0xe000e100
 800085c:	e000e104 	.word	0xe000e104
 8000860:	e000e108 	.word	0xe000e108
 8000864:	e000e180 	.word	0xe000e180
 8000868:	e000e184 	.word	0xe000e184
 800086c:	e000e188 	.word	0xe000e188

08000870 <GPIO_IRQPriorityConfig>:
 * @Note		- none
 *
 */

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000870:	b480      	push	{r7}
 8000872:	b085      	sub	sp, #20
 8000874:	af00      	add	r7, sp, #0
 8000876:	4603      	mov	r3, r0
 8000878:	6039      	str	r1, [r7, #0]
 800087a:	71fb      	strb	r3, [r7, #7]
	// Find the IPRx Register
	uint8_t iprx = IRQNumber / 4;
 800087c:	79fb      	ldrb	r3, [r7, #7]
 800087e:	089b      	lsrs	r3, r3, #2
 8000880:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000882:	79fb      	ldrb	r3, [r7, #7]
 8000884:	f003 0303 	and.w	r3, r3, #3
 8000888:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (iprx_section * 8) + (8 - NVIC_IPR_BITS_IMPLEMENTED);
 800088a:	7bbb      	ldrb	r3, [r7, #14]
 800088c:	00db      	lsls	r3, r3, #3
 800088e:	b2db      	uxtb	r3, r3
 8000890:	3304      	adds	r3, #4
 8000892:	737b      	strb	r3, [r7, #13]

	NVIC_IPR(iprx) |= (IRQPriority << shift_amount);
 8000894:	7bfb      	ldrb	r3, [r7, #15]
 8000896:	009b      	lsls	r3, r3, #2
 8000898:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800089c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008a0:	6819      	ldr	r1, [r3, #0]
 80008a2:	7b7b      	ldrb	r3, [r7, #13]
 80008a4:	683a      	ldr	r2, [r7, #0]
 80008a6:	409a      	lsls	r2, r3
 80008a8:	7bfb      	ldrb	r3, [r7, #15]
 80008aa:	009b      	lsls	r3, r3, #2
 80008ac:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80008b0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008b4:	4618      	mov	r0, r3
 80008b6:	ea41 0302 	orr.w	r3, r1, r2
 80008ba:	6003      	str	r3, [r0, #0]
}
 80008bc:	bf00      	nop
 80008be:	3714      	adds	r7, #20
 80008c0:	46bd      	mov	sp, r7
 80008c2:	bc80      	pop	{r7}
 80008c4:	4770      	bx	lr
	...

080008c8 <GPIO_IRQHandling>:
 * @Note		- none
 *
 */

void GPIO_IRQHandling(uint8_t PinNumber)
{
 80008c8:	b480      	push	{r7}
 80008ca:	b083      	sub	sp, #12
 80008cc:	af00      	add	r7, sp, #0
 80008ce:	4603      	mov	r3, r0
 80008d0:	71fb      	strb	r3, [r7, #7]

	// clear the exit PR bit for corresponding Pin Number
	if(EXTI->PR & (1 << PinNumber))
 80008d2:	4b0c      	ldr	r3, [pc, #48]	; (8000904 <GPIO_IRQHandling+0x3c>)
 80008d4:	695b      	ldr	r3, [r3, #20]
 80008d6:	79fa      	ldrb	r2, [r7, #7]
 80008d8:	2101      	movs	r1, #1
 80008da:	fa01 f202 	lsl.w	r2, r1, r2
 80008de:	4013      	ands	r3, r2
 80008e0:	2b00      	cmp	r3, #0
 80008e2:	d009      	beq.n	80008f8 <GPIO_IRQHandling+0x30>
	{
		EXTI->PR |= (1 << PinNumber);
 80008e4:	4b07      	ldr	r3, [pc, #28]	; (8000904 <GPIO_IRQHandling+0x3c>)
 80008e6:	695b      	ldr	r3, [r3, #20]
 80008e8:	79fa      	ldrb	r2, [r7, #7]
 80008ea:	2101      	movs	r1, #1
 80008ec:	fa01 f202 	lsl.w	r2, r1, r2
 80008f0:	4611      	mov	r1, r2
 80008f2:	4a04      	ldr	r2, [pc, #16]	; (8000904 <GPIO_IRQHandling+0x3c>)
 80008f4:	430b      	orrs	r3, r1
 80008f6:	6153      	str	r3, [r2, #20]
	}
}
 80008f8:	bf00      	nop
 80008fa:	370c      	adds	r7, #12
 80008fc:	46bd      	mov	sp, r7
 80008fe:	bc80      	pop	{r7}
 8000900:	4770      	bx	lr
 8000902:	bf00      	nop
 8000904:	40013c00 	.word	0x40013c00

08000908 <__libc_init_array>:
 8000908:	b570      	push	{r4, r5, r6, lr}
 800090a:	4d0d      	ldr	r5, [pc, #52]	; (8000940 <__libc_init_array+0x38>)
 800090c:	4c0d      	ldr	r4, [pc, #52]	; (8000944 <__libc_init_array+0x3c>)
 800090e:	1b64      	subs	r4, r4, r5
 8000910:	10a4      	asrs	r4, r4, #2
 8000912:	2600      	movs	r6, #0
 8000914:	42a6      	cmp	r6, r4
 8000916:	d109      	bne.n	800092c <__libc_init_array+0x24>
 8000918:	4d0b      	ldr	r5, [pc, #44]	; (8000948 <__libc_init_array+0x40>)
 800091a:	4c0c      	ldr	r4, [pc, #48]	; (800094c <__libc_init_array+0x44>)
 800091c:	f000 f818 	bl	8000950 <_init>
 8000920:	1b64      	subs	r4, r4, r5
 8000922:	10a4      	asrs	r4, r4, #2
 8000924:	2600      	movs	r6, #0
 8000926:	42a6      	cmp	r6, r4
 8000928:	d105      	bne.n	8000936 <__libc_init_array+0x2e>
 800092a:	bd70      	pop	{r4, r5, r6, pc}
 800092c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000930:	4798      	blx	r3
 8000932:	3601      	adds	r6, #1
 8000934:	e7ee      	b.n	8000914 <__libc_init_array+0xc>
 8000936:	f855 3b04 	ldr.w	r3, [r5], #4
 800093a:	4798      	blx	r3
 800093c:	3601      	adds	r6, #1
 800093e:	e7f2      	b.n	8000926 <__libc_init_array+0x1e>
 8000940:	08000968 	.word	0x08000968
 8000944:	08000968 	.word	0x08000968
 8000948:	08000968 	.word	0x08000968
 800094c:	0800096c 	.word	0x0800096c

08000950 <_init>:
 8000950:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000952:	bf00      	nop
 8000954:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000956:	bc08      	pop	{r3}
 8000958:	469e      	mov	lr, r3
 800095a:	4770      	bx	lr

0800095c <_fini>:
 800095c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095e:	bf00      	nop
 8000960:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000962:	bc08      	pop	{r3}
 8000964:	469e      	mov	lr, r3
 8000966:	4770      	bx	lr
